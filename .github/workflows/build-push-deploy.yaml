name: Build, push and deploy

on:
  push:
    branches:
      - main

jobs:
  build-push-base-image:
    name: Build and push base image
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pelandobot-base:latest


  build-push-child-images:
    needs: build-push-base-image
    runs-on: ubuntu-latest
    name: Build and push child image - ${{ matrix.image-name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - image-name: pelandobot-scraper
            slug: gejusto/pelandobot-scraper
            dockerfile: ./src/pelandobot/scraper/Dockerfile

          - image-name: pelandobot-promosender
            slug: gejusto/pelandobot-promosender
            dockerfile: ./src/pelandobot/promo_sender/Dockerfile

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ${{ matrix.dockerfile }}
          tags: ${{ matrix.slug }}:latest


  deploy:
    needs: build-push-child-images
    runs-on: ubuntu-latest
    name: Deploy to EC2 instance

    steps:
      - uses: actions/checkout@v3

      - name: Deploy via ssh
        uses: easingthemes/ssh-deploy@v4.0.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.AWS_REMOTE_HOST }}
          REMOTE_USER: "ubuntu"
          TARGET: "/home/ubuntu/pelandoBot"
          SCRIPT_AFTER: |
            echo HOST=${{ secrets.HOST }} > ./pelandoBot/.env
            echo API_KEY=${{ secrets.API_KEY }} >> ./pelandoBot/.env
            echo ${{ secrets.WEBHOOK_CERT }} | base64 --decode > ./pelandoBot/src/pelandobot/app/webhook_cert.pem
            echo ${{ secrets.WEBHOOK_PKEY }} | base64 --decode > ./pelandoBot/src/pelandobot/app/webhook_pkey.pem
            cd ./pelandoBot
            mkdir -p redis-data
            docker compose up -d && echo Deployment successful!
